//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TreasureHuntDesktopApplication.FullClient.TreasureHuntService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="question", Namespace="http://schemas.datacontract.org/2004/07/TreasureHuntDesktopApplication.Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class question : System.Data.Objects.DataClasses.EntityObject, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Question1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion[] huntquestionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Question1 {
            get {
                return this.Question1Field;
            }
            set {
                this.Question1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                this.QuestionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                this.URLField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion[] huntquestions {
            get {
                return this.huntquestionsField;
            }
            set {
                this.huntquestionsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="huntquestion", Namespace="http://schemas.datacontract.org/2004/07/TreasureHuntDesktopApplication.Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class huntquestion : System.Data.Objects.DataClasses.EntityObject, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HuntIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HuntQuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt huntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.Objects.DataClasses.EntityReference<TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt> huntReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question questionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.Objects.DataClasses.EntityReference<TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question> questionReferenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HuntId {
            get {
                return this.HuntIdField;
            }
            set {
                this.HuntIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HuntQuestionId {
            get {
                return this.HuntQuestionIdField;
            }
            set {
                this.HuntQuestionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                this.QuestionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt hunt {
            get {
                return this.huntField;
            }
            set {
                this.huntField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.Objects.DataClasses.EntityReference<TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt> huntReference {
            get {
                return this.huntReferenceField;
            }
            set {
                this.huntReferenceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.Objects.DataClasses.EntityReference<TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question> questionReference {
            get {
                return this.questionReferenceField;
            }
            set {
                this.questionReferenceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="hunt", Namespace="http://schemas.datacontract.org/2004/07/TreasureHuntDesktopApplication.Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class hunt : System.Data.Objects.DataClasses.EntityObject, System.Runtime.Serialization.IExtensibleDataObject {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HuntIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HuntNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion[] huntquestionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HuntId {
            get {
                return this.HuntIdField;
            }
            set {
                this.HuntIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HuntName {
            get {
                return this.HuntNameField;
            }
            set {
                this.HuntNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion[] huntquestions {
            get {
                return this.huntquestionsField;
            }
            set {
                this.huntquestionsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TreasureHuntService.ITreasureHuntService")]
    public interface ITreasureHuntService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreasureHuntService/SaveQuestion", ReplyAction="http://tempuri.org/ITreasureHuntService/SaveQuestionResponse")]
        long SaveQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question newQuestion);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITreasureHuntService/SaveQuestion", ReplyAction="http://tempuri.org/ITreasureHuntService/SaveQuestionResponse")]
        System.IAsyncResult BeginSaveQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question newQuestion, System.AsyncCallback callback, object asyncState);
        
        long EndSaveQuestion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreasureHuntService/SaveNewHuntQuestion", ReplyAction="http://tempuri.org/ITreasureHuntService/SaveNewHuntQuestionResponse")]
        void SaveNewHuntQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion huntQuestion);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITreasureHuntService/SaveNewHuntQuestion", ReplyAction="http://tempuri.org/ITreasureHuntService/SaveNewHuntQuestionResponse")]
        System.IAsyncResult BeginSaveNewHuntQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion huntQuestion, System.AsyncCallback callback, object asyncState);
        
        void EndSaveNewHuntQuestion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreasureHuntService/SaveNewHunt", ReplyAction="http://tempuri.org/ITreasureHuntService/SaveNewHuntResponse")]
        void SaveNewHunt(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt newHunt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITreasureHuntService/SaveNewHunt", ReplyAction="http://tempuri.org/ITreasureHuntService/SaveNewHuntResponse")]
        System.IAsyncResult BeginSaveNewHunt(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt newHunt, System.AsyncCallback callback, object asyncState);
        
        void EndSaveNewHunt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreasureHuntService/GetHuntQuestions", ReplyAction="http://tempuri.org/ITreasureHuntService/GetHuntQuestionsResponse")]
        long[] GetHuntQuestions(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt hunt);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITreasureHuntService/GetHuntQuestions", ReplyAction="http://tempuri.org/ITreasureHuntService/GetHuntQuestionsResponse")]
        System.IAsyncResult BeginGetHuntQuestions(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt hunt, System.AsyncCallback callback, object asyncState);
        
        long[] EndGetHuntQuestions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreasureHuntService/GetTreasureHunts", ReplyAction="http://tempuri.org/ITreasureHuntService/GetTreasureHuntsResponse")]
        TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt[] GetTreasureHunts();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITreasureHuntService/GetTreasureHunts", ReplyAction="http://tempuri.org/ITreasureHuntService/GetTreasureHuntsResponse")]
        System.IAsyncResult BeginGetTreasureHunts(System.AsyncCallback callback, object asyncState);
        
        TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt[] EndGetTreasureHunts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreasureHuntService/GetQuestion", ReplyAction="http://tempuri.org/ITreasureHuntService/GetQuestionResponse")]
        TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question GetQuestion(long questionId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITreasureHuntService/GetQuestion", ReplyAction="http://tempuri.org/ITreasureHuntService/GetQuestionResponse")]
        System.IAsyncResult BeginGetQuestion(long questionId, System.AsyncCallback callback, object asyncState);
        
        TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question EndGetQuestion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreasureHuntService/UpdateQuestion", ReplyAction="http://tempuri.org/ITreasureHuntService/UpdateQuestionResponse")]
        void UpdateQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question updatedQuestion);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITreasureHuntService/UpdateQuestion", ReplyAction="http://tempuri.org/ITreasureHuntService/UpdateQuestionResponse")]
        System.IAsyncResult BeginUpdateQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question updatedQuestion, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateQuestion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreasureHuntService/GetHuntBasedOnName", ReplyAction="http://tempuri.org/ITreasureHuntService/GetHuntBasedOnNameResponse")]
        TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt GetHuntBasedOnName(string name);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITreasureHuntService/GetHuntBasedOnName", ReplyAction="http://tempuri.org/ITreasureHuntService/GetHuntBasedOnNameResponse")]
        System.IAsyncResult BeginGetHuntBasedOnName(string name, System.AsyncCallback callback, object asyncState);
        
        TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt EndGetHuntBasedOnName(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITreasureHuntServiceChannel : TreasureHuntDesktopApplication.FullClient.TreasureHuntService.ITreasureHuntService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHuntQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHuntQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTreasureHuntsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTreasureHuntsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHuntBasedOnNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHuntBasedOnNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TreasureHuntServiceClient : System.ServiceModel.ClientBase<TreasureHuntDesktopApplication.FullClient.TreasureHuntService.ITreasureHuntService>, TreasureHuntDesktopApplication.FullClient.TreasureHuntService.ITreasureHuntService {
        
        private BeginOperationDelegate onBeginSaveQuestionDelegate;
        
        private EndOperationDelegate onEndSaveQuestionDelegate;
        
        private System.Threading.SendOrPostCallback onSaveQuestionCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveNewHuntQuestionDelegate;
        
        private EndOperationDelegate onEndSaveNewHuntQuestionDelegate;
        
        private System.Threading.SendOrPostCallback onSaveNewHuntQuestionCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveNewHuntDelegate;
        
        private EndOperationDelegate onEndSaveNewHuntDelegate;
        
        private System.Threading.SendOrPostCallback onSaveNewHuntCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHuntQuestionsDelegate;
        
        private EndOperationDelegate onEndGetHuntQuestionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetHuntQuestionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTreasureHuntsDelegate;
        
        private EndOperationDelegate onEndGetTreasureHuntsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTreasureHuntsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetQuestionDelegate;
        
        private EndOperationDelegate onEndGetQuestionDelegate;
        
        private System.Threading.SendOrPostCallback onGetQuestionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateQuestionDelegate;
        
        private EndOperationDelegate onEndUpdateQuestionDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateQuestionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHuntBasedOnNameDelegate;
        
        private EndOperationDelegate onEndGetHuntBasedOnNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetHuntBasedOnNameCompletedDelegate;
        
        public TreasureHuntServiceClient() {
        }
        
        public TreasureHuntServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TreasureHuntServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TreasureHuntServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TreasureHuntServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<SaveQuestionCompletedEventArgs> SaveQuestionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveNewHuntQuestionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveNewHuntCompleted;
        
        public event System.EventHandler<GetHuntQuestionsCompletedEventArgs> GetHuntQuestionsCompleted;
        
        public event System.EventHandler<GetTreasureHuntsCompletedEventArgs> GetTreasureHuntsCompleted;
        
        public event System.EventHandler<GetQuestionCompletedEventArgs> GetQuestionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateQuestionCompleted;
        
        public event System.EventHandler<GetHuntBasedOnNameCompletedEventArgs> GetHuntBasedOnNameCompleted;
        
        public long SaveQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question newQuestion) {
            return base.Channel.SaveQuestion(newQuestion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question newQuestion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveQuestion(newQuestion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndSaveQuestion(System.IAsyncResult result) {
            return base.Channel.EndSaveQuestion(result);
        }
        
        private System.IAsyncResult OnBeginSaveQuestion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question newQuestion = ((TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question)(inValues[0]));
            return this.BeginSaveQuestion(newQuestion, callback, asyncState);
        }
        
        private object[] OnEndSaveQuestion(System.IAsyncResult result) {
            long retVal = this.EndSaveQuestion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveQuestionCompleted(object state) {
            if ((this.SaveQuestionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveQuestionCompleted(this, new SaveQuestionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveQuestionAsync(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question newQuestion) {
            this.SaveQuestionAsync(newQuestion, null);
        }
        
        public void SaveQuestionAsync(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question newQuestion, object userState) {
            if ((this.onBeginSaveQuestionDelegate == null)) {
                this.onBeginSaveQuestionDelegate = new BeginOperationDelegate(this.OnBeginSaveQuestion);
            }
            if ((this.onEndSaveQuestionDelegate == null)) {
                this.onEndSaveQuestionDelegate = new EndOperationDelegate(this.OnEndSaveQuestion);
            }
            if ((this.onSaveQuestionCompletedDelegate == null)) {
                this.onSaveQuestionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveQuestionCompleted);
            }
            base.InvokeAsync(this.onBeginSaveQuestionDelegate, new object[] {
                        newQuestion}, this.onEndSaveQuestionDelegate, this.onSaveQuestionCompletedDelegate, userState);
        }
        
        public void SaveNewHuntQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion huntQuestion) {
            base.Channel.SaveNewHuntQuestion(huntQuestion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveNewHuntQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion huntQuestion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveNewHuntQuestion(huntQuestion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveNewHuntQuestion(System.IAsyncResult result) {
            base.Channel.EndSaveNewHuntQuestion(result);
        }
        
        private System.IAsyncResult OnBeginSaveNewHuntQuestion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion huntQuestion = ((TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion)(inValues[0]));
            return this.BeginSaveNewHuntQuestion(huntQuestion, callback, asyncState);
        }
        
        private object[] OnEndSaveNewHuntQuestion(System.IAsyncResult result) {
            this.EndSaveNewHuntQuestion(result);
            return null;
        }
        
        private void OnSaveNewHuntQuestionCompleted(object state) {
            if ((this.SaveNewHuntQuestionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveNewHuntQuestionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveNewHuntQuestionAsync(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion huntQuestion) {
            this.SaveNewHuntQuestionAsync(huntQuestion, null);
        }
        
        public void SaveNewHuntQuestionAsync(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.huntquestion huntQuestion, object userState) {
            if ((this.onBeginSaveNewHuntQuestionDelegate == null)) {
                this.onBeginSaveNewHuntQuestionDelegate = new BeginOperationDelegate(this.OnBeginSaveNewHuntQuestion);
            }
            if ((this.onEndSaveNewHuntQuestionDelegate == null)) {
                this.onEndSaveNewHuntQuestionDelegate = new EndOperationDelegate(this.OnEndSaveNewHuntQuestion);
            }
            if ((this.onSaveNewHuntQuestionCompletedDelegate == null)) {
                this.onSaveNewHuntQuestionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveNewHuntQuestionCompleted);
            }
            base.InvokeAsync(this.onBeginSaveNewHuntQuestionDelegate, new object[] {
                        huntQuestion}, this.onEndSaveNewHuntQuestionDelegate, this.onSaveNewHuntQuestionCompletedDelegate, userState);
        }
        
        public void SaveNewHunt(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt newHunt) {
            base.Channel.SaveNewHunt(newHunt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveNewHunt(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt newHunt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveNewHunt(newHunt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveNewHunt(System.IAsyncResult result) {
            base.Channel.EndSaveNewHunt(result);
        }
        
        private System.IAsyncResult OnBeginSaveNewHunt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt newHunt = ((TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt)(inValues[0]));
            return this.BeginSaveNewHunt(newHunt, callback, asyncState);
        }
        
        private object[] OnEndSaveNewHunt(System.IAsyncResult result) {
            this.EndSaveNewHunt(result);
            return null;
        }
        
        private void OnSaveNewHuntCompleted(object state) {
            if ((this.SaveNewHuntCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveNewHuntCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveNewHuntAsync(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt newHunt) {
            this.SaveNewHuntAsync(newHunt, null);
        }
        
        public void SaveNewHuntAsync(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt newHunt, object userState) {
            if ((this.onBeginSaveNewHuntDelegate == null)) {
                this.onBeginSaveNewHuntDelegate = new BeginOperationDelegate(this.OnBeginSaveNewHunt);
            }
            if ((this.onEndSaveNewHuntDelegate == null)) {
                this.onEndSaveNewHuntDelegate = new EndOperationDelegate(this.OnEndSaveNewHunt);
            }
            if ((this.onSaveNewHuntCompletedDelegate == null)) {
                this.onSaveNewHuntCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveNewHuntCompleted);
            }
            base.InvokeAsync(this.onBeginSaveNewHuntDelegate, new object[] {
                        newHunt}, this.onEndSaveNewHuntDelegate, this.onSaveNewHuntCompletedDelegate, userState);
        }
        
        public long[] GetHuntQuestions(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt hunt) {
            return base.Channel.GetHuntQuestions(hunt);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHuntQuestions(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt hunt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHuntQuestions(hunt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long[] EndGetHuntQuestions(System.IAsyncResult result) {
            return base.Channel.EndGetHuntQuestions(result);
        }
        
        private System.IAsyncResult OnBeginGetHuntQuestions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt hunt = ((TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt)(inValues[0]));
            return this.BeginGetHuntQuestions(hunt, callback, asyncState);
        }
        
        private object[] OnEndGetHuntQuestions(System.IAsyncResult result) {
            long[] retVal = this.EndGetHuntQuestions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHuntQuestionsCompleted(object state) {
            if ((this.GetHuntQuestionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHuntQuestionsCompleted(this, new GetHuntQuestionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHuntQuestionsAsync(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt hunt) {
            this.GetHuntQuestionsAsync(hunt, null);
        }
        
        public void GetHuntQuestionsAsync(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt hunt, object userState) {
            if ((this.onBeginGetHuntQuestionsDelegate == null)) {
                this.onBeginGetHuntQuestionsDelegate = new BeginOperationDelegate(this.OnBeginGetHuntQuestions);
            }
            if ((this.onEndGetHuntQuestionsDelegate == null)) {
                this.onEndGetHuntQuestionsDelegate = new EndOperationDelegate(this.OnEndGetHuntQuestions);
            }
            if ((this.onGetHuntQuestionsCompletedDelegate == null)) {
                this.onGetHuntQuestionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHuntQuestionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetHuntQuestionsDelegate, new object[] {
                        hunt}, this.onEndGetHuntQuestionsDelegate, this.onGetHuntQuestionsCompletedDelegate, userState);
        }
        
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt[] GetTreasureHunts() {
            return base.Channel.GetTreasureHunts();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTreasureHunts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTreasureHunts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt[] EndGetTreasureHunts(System.IAsyncResult result) {
            return base.Channel.EndGetTreasureHunts(result);
        }
        
        private System.IAsyncResult OnBeginGetTreasureHunts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetTreasureHunts(callback, asyncState);
        }
        
        private object[] OnEndGetTreasureHunts(System.IAsyncResult result) {
            TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt[] retVal = this.EndGetTreasureHunts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTreasureHuntsCompleted(object state) {
            if ((this.GetTreasureHuntsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTreasureHuntsCompleted(this, new GetTreasureHuntsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTreasureHuntsAsync() {
            this.GetTreasureHuntsAsync(null);
        }
        
        public void GetTreasureHuntsAsync(object userState) {
            if ((this.onBeginGetTreasureHuntsDelegate == null)) {
                this.onBeginGetTreasureHuntsDelegate = new BeginOperationDelegate(this.OnBeginGetTreasureHunts);
            }
            if ((this.onEndGetTreasureHuntsDelegate == null)) {
                this.onEndGetTreasureHuntsDelegate = new EndOperationDelegate(this.OnEndGetTreasureHunts);
            }
            if ((this.onGetTreasureHuntsCompletedDelegate == null)) {
                this.onGetTreasureHuntsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTreasureHuntsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTreasureHuntsDelegate, null, this.onEndGetTreasureHuntsDelegate, this.onGetTreasureHuntsCompletedDelegate, userState);
        }
        
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question GetQuestion(long questionId) {
            return base.Channel.GetQuestion(questionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetQuestion(long questionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetQuestion(questionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question EndGetQuestion(System.IAsyncResult result) {
            return base.Channel.EndGetQuestion(result);
        }
        
        private System.IAsyncResult OnBeginGetQuestion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long questionId = ((long)(inValues[0]));
            return this.BeginGetQuestion(questionId, callback, asyncState);
        }
        
        private object[] OnEndGetQuestion(System.IAsyncResult result) {
            TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question retVal = this.EndGetQuestion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetQuestionCompleted(object state) {
            if ((this.GetQuestionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetQuestionCompleted(this, new GetQuestionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetQuestionAsync(long questionId) {
            this.GetQuestionAsync(questionId, null);
        }
        
        public void GetQuestionAsync(long questionId, object userState) {
            if ((this.onBeginGetQuestionDelegate == null)) {
                this.onBeginGetQuestionDelegate = new BeginOperationDelegate(this.OnBeginGetQuestion);
            }
            if ((this.onEndGetQuestionDelegate == null)) {
                this.onEndGetQuestionDelegate = new EndOperationDelegate(this.OnEndGetQuestion);
            }
            if ((this.onGetQuestionCompletedDelegate == null)) {
                this.onGetQuestionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetQuestionCompleted);
            }
            base.InvokeAsync(this.onBeginGetQuestionDelegate, new object[] {
                        questionId}, this.onEndGetQuestionDelegate, this.onGetQuestionCompletedDelegate, userState);
        }
        
        public void UpdateQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question updatedQuestion) {
            base.Channel.UpdateQuestion(updatedQuestion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateQuestion(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question updatedQuestion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateQuestion(updatedQuestion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateQuestion(System.IAsyncResult result) {
            base.Channel.EndUpdateQuestion(result);
        }
        
        private System.IAsyncResult OnBeginUpdateQuestion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question updatedQuestion = ((TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question)(inValues[0]));
            return this.BeginUpdateQuestion(updatedQuestion, callback, asyncState);
        }
        
        private object[] OnEndUpdateQuestion(System.IAsyncResult result) {
            this.EndUpdateQuestion(result);
            return null;
        }
        
        private void OnUpdateQuestionCompleted(object state) {
            if ((this.UpdateQuestionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateQuestionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateQuestionAsync(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question updatedQuestion) {
            this.UpdateQuestionAsync(updatedQuestion, null);
        }
        
        public void UpdateQuestionAsync(TreasureHuntDesktopApplication.FullClient.TreasureHuntService.question updatedQuestion, object userState) {
            if ((this.onBeginUpdateQuestionDelegate == null)) {
                this.onBeginUpdateQuestionDelegate = new BeginOperationDelegate(this.OnBeginUpdateQuestion);
            }
            if ((this.onEndUpdateQuestionDelegate == null)) {
                this.onEndUpdateQuestionDelegate = new EndOperationDelegate(this.OnEndUpdateQuestion);
            }
            if ((this.onUpdateQuestionCompletedDelegate == null)) {
                this.onUpdateQuestionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateQuestionCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateQuestionDelegate, new object[] {
                        updatedQuestion}, this.onEndUpdateQuestionDelegate, this.onUpdateQuestionCompletedDelegate, userState);
        }
        
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt GetHuntBasedOnName(string name) {
            return base.Channel.GetHuntBasedOnName(name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHuntBasedOnName(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHuntBasedOnName(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt EndGetHuntBasedOnName(System.IAsyncResult result) {
            return base.Channel.EndGetHuntBasedOnName(result);
        }
        
        private System.IAsyncResult OnBeginGetHuntBasedOnName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return this.BeginGetHuntBasedOnName(name, callback, asyncState);
        }
        
        private object[] OnEndGetHuntBasedOnName(System.IAsyncResult result) {
            TreasureHuntDesktopApplication.FullClient.TreasureHuntService.hunt retVal = this.EndGetHuntBasedOnName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHuntBasedOnNameCompleted(object state) {
            if ((this.GetHuntBasedOnNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHuntBasedOnNameCompleted(this, new GetHuntBasedOnNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHuntBasedOnNameAsync(string name) {
            this.GetHuntBasedOnNameAsync(name, null);
        }
        
        public void GetHuntBasedOnNameAsync(string name, object userState) {
            if ((this.onBeginGetHuntBasedOnNameDelegate == null)) {
                this.onBeginGetHuntBasedOnNameDelegate = new BeginOperationDelegate(this.OnBeginGetHuntBasedOnName);
            }
            if ((this.onEndGetHuntBasedOnNameDelegate == null)) {
                this.onEndGetHuntBasedOnNameDelegate = new EndOperationDelegate(this.OnEndGetHuntBasedOnName);
            }
            if ((this.onGetHuntBasedOnNameCompletedDelegate == null)) {
                this.onGetHuntBasedOnNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHuntBasedOnNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetHuntBasedOnNameDelegate, new object[] {
                        name}, this.onEndGetHuntBasedOnNameDelegate, this.onGetHuntBasedOnNameCompletedDelegate, userState);
        }
    }
}
